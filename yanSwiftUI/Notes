//1
In stacks we have spacing property - it's the space between our elements in stack. Also alignment - alignment (in the stack) of the elements, the side (leading, trailing or center).
Divider is just the line that divides our views.
Padding - for example for the text - we make the frame space in the text - its bigger. By default it will be for all the sides. If we need just the special size - padding(.bottom, 50), for instance.
Spacer - divides our view for equal parts. Spacer gets all the space.

//2
Working with text
lineLimit - the number of lines that we need
.truncationMode(.middle) - make the ... for the text in the center
.lineLimit(nil) - no limit for the lines of the text
.kerning(5) - space between symbols with space at the end (should be in the beginning)
.tracking(5) - space between symbols without space at the end (should be in the beginning)

//3
Images
sfsymbols - edit like a text
.clipShape(Circle()) - shape for the image
background can be not just color - any View

//5
For binding we use property wrappers. Property wrapper - now @State.
We add them to our properties to observe the actions on the screen and our code. 

if we change the value - $, if no - without $

//12
List - for static or dynamic values

//14
group is just a container for other views 

//16
after closing the alert SwiftUI automatically changes showingAlert property to false again
to one view - we cant make 2 alerts at the same time

//18
@State - working with data in one view, not in different views
for communicating between 2 views we use classes. If we use structs - other view will not see it becuase of copy. But we need reference. @ObservedObject and @EnvironmentObject and @Published for properties of the class (if they change).
@ObservedObject + ObservableObject - they can be used in more than one view and all the views will be updated.
